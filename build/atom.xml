<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title>SIGUSR2</title><link href="http://sigusr2.net/atom.xml" rel="self" /><link href="http://sigusr2.net/"/><updated>2010-10-24T19:34:01Z</updated><author><name>Andrew Gwozdziewycz</name></author><id>md5:ec2c8804a8dac6a866e1a43cfce32fc1</id><entry><title>Clojure Conj Reading List</title><link href="/2010/Oct/24/clojure-conj-reading-list.html"/><id>md5:bf830f7059334bc6e2722078fa36fb07</id><updated>2010-10-24T00:00:00Z</updated><content type="html"><![CDATA[<p>
   <span class="preamble">This past weekend, the first (hopefully annual) <a href="http://first.clojure-conj.org">Clojure Conj</a> took place in Durham, NC.</span></p>
<p>In my opinion, the conference was a great success, and was greatly inspirational, as well as enjoyable in many regards. I left the conference recharged with energy to better learn about and help improve the Clojure ecosystem, and just get more involved. But, that's not all I left with of course. I left with great information and even more pointers to new thoughts, opinions and ideas.</p>

<p>I've compiled a small reading list of things that were mentioned in talks. I also got a chance to (briefly) meet <a href="http://fogus.me">Michael Fogus</a>, whose talk discussed the influences of Clojure and asked him if it would be possible for him to make a reading list. I certainly hope he does. Anyway, here's my list:</p>
<dl>
   <dt>
      <q><a href="http://www.gdmc.nl/publications/2008/MonetDB.pdf">MonetDB, a novel spatial column-store DBMS</a></q>&mdash;Maarten Vermeij, Wilko Quak, Martin Kersten, Niels Nes
   </dt>
   <dd>
      <em>Abstract</em>: Column-store database engines are a promising track in database research to handle data warehouses. In this paper we describe our experiences in extending the open-source database management system MonetDB with geo-spatial functionality. The approach taken is to leverage the existing geo-spatial software library GEOS through the extensibility features of this DBMS. The result is a high-performance solution using a software stack that enables future research and development improvements in many directions. In our paper we &iuml;&not;rst give an overview of the MonetDB architecture then we describe how this architecture is beneficial for the handling of spatial data.
   </dd>
   <dt>
      <q><a href="http://www.st.cs.uni-saarland.de/edu/seminare/2005/advanced-fp/docs/huet-zipper.pdf">The Zipper</a></q>&mdash;Gerard Huet
   </dt>
   <dd>
      <em>Capsule Review</em>: Almost every programmer has faced the problem of representing a tree together with a subtree that is the focus of attention, where that focus may move left, right, up or down the tree. The Zipper is Huet's nifty name for a nifty data structure which fulfills this need. I wish I had known of it when I faced this task, because the solution I came up with was not quite so efficient or elegant as the Zipper.
   </dd>
   <dt>
      <q><a href="http://www.amazon.com/gp/product/0465024114?ie=UTF8&amp;tag=siusdesi2-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0465024114">Finding Flow: The Psychology of Engagement with Everyday Life</a></q>&mdash;Mihaly Csikszentmihalyi
   </dt>
   <dt>
      <q><a href="http://www.amazon.com/gp/product/0716704633?ie=UTF8&amp;tag=siusdesi2-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0716704633">Computer Power and Human Reason</a>&mdash;Joseph Weizenbaum</q>
   </dt>
   <dt>
      <q><a href="http://www.soi.city.ac.uk/~ross/papers/FingerTree.pdf">Finger Trees: A Simple General-purpose Data Structure</a></q>&mdash;Ralf Hinze, Ross Paterson
   </dt>
   <dd>We present 2-3 finger trees, a functional representation of persistent sequences supporting access to the ends in amortized constant time, and concatenation and splitting in time logarithmic in the size of the smaller piece. Representations achieving these bounds have appeared previously, but 2-3 finger trees are much simpler, as are the operations on them. Further, by defining the split operation in a general form, we obtain a general purpose data structure that can serve as a sequence, priority queue, search tree, priority search queue and more.
   </dd>
   <dt>
      <q><a href="http://www.amazon.com/gp/product/0691023565?ie=UTF8&amp;tag=siusdesi2-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0691023565">How to Solve It: A New Aspect of Mathematical Method</a></q>&mdash;G. Polya
   </dt>
</dl>
]]></content></entry>
<entry><title>This is not the Freehackers Union...</title><link href="/2010/Oct/12/this-is-not-the-freehackers-union.html"/><id>md5:39d499a59be2c0995aa1b553a103ed50</id><updated>2010-10-12T00:00:00Z</updated><content type="html"><![CDATA[<p><em>I work at <a href="http://www.meetup.com/">Meetup</a>, but the opinions expressed in here are my own, and do not necessarily represent the opinions of Meetup.</em></p>

<p><span class="preamble">Zed Shaw had a <a href="http://www.zedshaw.com/essays/the_freehackers_union.html">dream</a>, and that dream <a href="http://www.zedshaw.com/blog/2009-03-16.html">failed</a>, but I'm trying again and at least for now succeeding.</span></p>

<p>When the <a href="http://www.zedshaw.com/essays/the_freehackers_union.html">Freehackers Union post</a> came out and it starting getting some attention, I was completely stoked. I couldn't wait to move to NYC (I was moving anyway) and show off my hack<sup><a href="#note-1">[1]</a></sup> and gain acceptance into the group. Of course, by the time I actually got here, the F.U. had dissipated.</p>

<p>I have to be honest, I did think Zed was exaggerating quite a bit when he described his frustrations attending tech events, but as I started getting involved in the NYC tech scene, I too felt the same way.</p>

<p>But, Zed was right&mdash;NYC tech groups and events suck. OK, maybe that's a bit harsh, because there <a href="http://lispnyc.org/home.clp">are</a> <a href="http://nycpython.org/">great</a> <a href="http://www.meetup.com/Clojure-NYC/">ones</a> <a href="http://www.meetup.com/NYC-Tech-Talks/">out</a> <a href="http://www.meetup.com/ny-scala">there</a><sup><a href="#note-2">[2]</a></sup>, but even the ones I like suffer from business people, and even worse, <em>horrible</em> tech recruiters.</p>

<p>Tech events also suffer from too much company promotion and not enough about the actual tech. I can't count how many times I've sat through a 15 minute sermon on Product X that lasted <em>25 minutes</em> due to the inability of the organizer, whether due to politeness or interest, to keep to the scheduled time slot. Worse yet, the speaker gives a sales pitch, hoping to get the audience on board to purchase it, or in the case of it being some Company X's "contribution to open source" to become contributors. It's just not useful to me<sup><a href="#note-3">[3]</a></sup>.
</p>

<p>In fact, the best talks at any tech event I've ever been to are just 5 minutes (dubbed <a href="http://en.wikipedia.org/wiki/Lightning_Talk">Lightning Talks</a>). Five minutes isn't a lot of time, but it is more than enough time to convince an audience that they should check something out, or <em>show off</em> something cool that they have built. It also happens to be the format that the F.U. used. Why? Because Zed is an intelligent guy&mdash;he too knows that 5 minutes is a perfect amount of time for a talk.</p>

<p>But why? It's quite simple really. If the talk sucks, or doesn't interest you, it is only 5 minutes of your life gone. However, if the talk is good or of interest to you, there is always time later to get together and discuss it further.</p>

<h3>Hack and Tell</h3>

<p>In August, I started NYC's <a href="http://hackandtell.org/">Hack and Tell</a>, a show and tell for hackers. It's an experiment, attempting to answer the question: "Can a relaxed Freehackers Union, with a few new rules actually work?" So far the answer has been "Hell yeah! It can totally thrive!" All 3 events have had great turn outs, with great projects being presented.</p>

<p>The rules are simple. You get 5 minutes<sup><a href="#note-4">[4]</a></sup>to show off whatever it is you are doing (hardware, library X, programming language, build tool, visualization, hack, whatever), and the audience gets 5 minutes to give you praise, tell you "you suck"<sup><a href="#note-5">[5]</a></sup>, ask a question, or offer advice. The only other rules are "No Startup pitches", "No Deckware" and keep your work at work&mdash;we want to see personal projects.</p>

<p>We also do not allow the resources of the group to be utilized for recruiting purposes. As a result, we see next to no recruiters<sup><a href="#note-6">[6]</a></sup>, and I, on occasion, have received emails from members wanting to promote something, asking if it was OK to do so<sup><a href="#note-7">[7]</a></sup>.</p>

<p>I'm not sure how long the quiet time will last, (or even how long I can successfully keep it running) but my hope is that strict enforcement of the core rules will keep it fun and a great addition to the NYC tech community.</p>

<h4>This sounds wonderful, but what are the issues?</h4>

<p>Aside from the aforementioned recruiter, we've had very few interruptions to the flow and development of an awesome group, but I do see some problems starting to show.</p>

<p>For one, the group's membership, and attendance is starting to grow due to word of mouth and more exposure from local NYC mailing lists such as <a href="http://www.garysguide.org/">Gary's Guide</a> and <a href="http://startupdigest.com/">Startup Digest</a>.</p>

<p>This is both a blessing and a curse. It is a blessing because we have a larger pool of developers to show off their projects. But, it is also a curse because not everyone that joins will become a presenter, whether due to lack of technical knowledge or lack of time outside of work to build things to show off. The curse actually can get worse of course, because there is not a clear reason for them (i.e. the non-contributors) to attend. What do these folks actually want to get from Hack and Tell?</p>

<p>It is quite possible that they'll become members for recruiting reasons, or other reasons that I have not quite discovered yet, but if they are not building stuff in their free time, do they belong? I don't know, but this question certainly on my mind, and it is certainly a worry.</p>

<p>Ultimately, I think that some pool of non-presenters is healthy, and I believe that the pool is ultimately contributing positively, at least in some cases. The group of non-presenters most likely has something else to contribute&mdash;maybe they are well connected and can be a megaphone to people in other cities, or even within NYC&mdash;which we certainly need, at least now, to attract more great projects to be presented. But, that can't be true of the entire non-presenter pool. There has to be leechers. Again, I don't have the answers.</p>

<p>I'm more than happy to hear anyone and everyone's thought on the matter, share more of my experiences and help other people get a Hack and Tell started in their city, if they'd like. I'm certainly willing to setup another means of conversation as well if anyone is interested.</p>

<p><strong>More discussion:</strong> <a href="http://news.ycombinator.com/item?id=1785627">Hacker News</a></p>

<p><strong>Zed responds</strong> at <a href="http://oppugn.us/posts/1286944278.html">FU NYC</a></p>

<ol class="footnotes">
   <li id="note-1">I didn't actually have a hack to show off, but I figured I'd come up with something, and hoped it'd be enough value to get me in</li>
   <li id="note-2">And many more that are good but not great. Of course, I haven't been to <em>all</em> the events or groups in NYC, so this is just my personal experience.</li>
   <li id="note-3">The product <em>might</em> actually be useful to me, but a 5 minute sales pitch with a link to more detail, it's design, some use cases etc. would be <em>more</em> useful because the speaker probably isn't answering my lower-level questions anyway, and it's shorter so I'll actually listen.</li>
   <li id="note-4">This is strictly enforced, and we normally use a <a href="http://hackandtell.org/timer">timer</a> (<a href="http://github.com/apgwoz/timer/">source</a>)&mdash;it's a bit buggy but it works great most of the time) which claps at the end. This serves two purposes; it prompts the the audience to clap, and it means that no one has to be rude to stop the presenter.</li>
   <li id="note-5">So far, this hasn't happened.</li>
   <li id="note-6">One company tried, and were pummeled with a wall of text explaining how stupid it is to target intelligent developers&mdash;the kind of people that'd almost certainly check the recruiting company's website if they were interested.</li>
   <li id="note-7">In most cases, the post was inappropriate, as it related to promotion of a startup, which of course is work related.</li>
</ol>


]]></content></entry>
<entry><title>Google Spreadsheets: Game of Life</title><link href="/2010/Jun/25/google-spreadsheets-game-of-life.html"/><id>md5:026e9ae419696af7421a97f140a267e1</id><updated>2010-06-25T00:00:00Z</updated><content type="html"><![CDATA[<p><span class="preamble">Google Docs has become an incredibly useful tool for businesses looking to cut costs on software and infrastructure, and it just keeps getting better.</span></p>

<p>For years, many businesses were tied to Microsoft Windows due to macros that they made use of in Excel and Word, but that's about to change. Recently, Google Spreadsheets released "<a href="http://www.google.com/google-d-s/scripts/scripts.html">Apps Script</a>," which allows you to extend Spreadsheets and/or integrate other Google products like Calendar.</p>

<p>Apps Scripts are written in JavaScript and the environment provides you with a bunch of different <a href="http://www.google.com/google-d-s/scripts/guide_chapter_01.html">services</a>, which allow you to access your contacts, maps, XML, fetch URLs from the Internet, get Google finance information, send email&mdash;all sorts of things that make it possible to create complicated workflows and applications. I can imagine that there will be a marketplace sometime soon, which will be bustling with great apps to buy and use.</p>

<p>For now though, you're on your own.</p>

<p>Anyway, yesterday, Google had a hackathon, and because I had no real business oriented application ideas I thought I'd make a game. The trouble is, all processing is done on the server side, so real time interaction is a bit difficult&mdash;if not impossible. There are timer events, form events and menu events, but you can't bind a key or anything like that&mdash;at least not that I know of.</p>

<p>So, a game like Tetris or Snake was out, but not Conway's classic <a href="http://en.wikipedia.org/wiki/Conway's_Game_of_Life">Game of Life</a>. The Game of Life is a zero-player game in which the initial board evolves to form interesting patterns or disappears into nothing. It's normally drawn on a grid of some sort, so I thought a spreadsheet was appropriate.</p>

<p><img src="http://files.sigusr2.net/images/game-of-life-gosper.png" /></p>

<p>I've put the source code up on <a href="http://github.com/apgwoz/app-script-game-of-life">GitHub</a>, along with some more instructions if you wanna check it out. Fork it.</p>
]]></content></entry>
<entry><title>Code Blogging: ARGF in Python</title><link href="/2010/Jun/23/argf.html"/><id>md5:9d5ba6e7df3fe6f44b607a6a0be06952</id><updated>2010-06-23T00:00:00Z</updated><content type="html"><![CDATA[<pre><code class="python">"""ARGF from Ruby in Python.
Released into the public domain by Andrew Gwozdziewycz, 2010
"""

import sys, os


class _ARGF(object):

    def __init__(self):
        self.lineno = 0
        self.file = None

    def __iter__(self):
        return self.next()

    def next(self):
        files = filter(os.path.isfile, sys.argv[1:])
        pairs = [(f, open(f)) for f in files] \
            if files else [('STDIN', sys.stdin)]
            
        for name, fobj in pairs:
            self.file = name

            for line in fobj.xreadlines():
                self.file = 'STDIN'
                self.lineno += 1
                yield line

ARGF = _ARGF()
</code></pre>

<p><strong>Update:</strong> It was pointed out that I didn't handle <code class="inline">lineno</code> correctly; I fixed it.</p>
]]></content></entry>
<entry><title>Maps are Broken, for Some Definition of Broken</title><link href="/2010/Jun/22/maps-are-broken-for-some-definition-of-broken.html"/><id>md5:ee8c78a17c21d8d986ea5f7e3bc78811</id><updated>2010-06-22T00:00:00Z</updated><content type="html"><![CDATA[<p><span class="preamble">Map datatypes are extremely useful for a variety of tasks in programming. But, they are often painful to use; take for example the following task.</span></p>

<p>In Java, I have a <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/HashMap.html">HashMap</a> and I wish to get a random key. Well, <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/AbstractMap.html">AbstractMap</a> doesn't define a way to get a random key, but it does provide a way to get a <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/Set.html">Set</a> of keys. Does Set have a way to get a random element? No, but you can create an Array from a Set with the <code class="inline">toArray()</code> method on Set.</p>

<p>We end up with the following:</p>

<pre><code>public String randomKey() {
    // Assuming: map = HashMap&lt;String, String&gt;;
    Set&lt;String&gt; set = map.keySet();
    Object[] strings = set.toArray();
    Random random = new Random();
    if (strings.length &gt; 0) {
        return (String)strings[random.nextInt(strings.length)];
    }
    return null;
}
</code></pre>

<p>Now, this isn't necessarily bad, but we have to create a new array, and a new set each time we want a random key. We can of course be smarter about this by caching the array and/or set, but then we run into synchronization issues. We also get screwed when we attempt to implement the <code class="inline">popRandom()</code> operation, which could be implemented like so:</p>

<pre><code>public String popRandom() {
    String key = randomKey();
    if (key != null) {
        String value = map.get(key);
        map.remove(key);
        return value;
    }
    return null; // or more appropriately, throw an exception
}
</code></pre>

<p>So, we're doing all this extra copying, allocating and deleting, when all we really need is an iterator, to solve this generically in <code class="inline">O(n)</code> time.</p>

<pre><code>public String randomKey() {
    // randomKey method in O(n) using imaginary iterator() on AbstractMap
    int size = map.size();
    if (size &gt; 0) {
        int index = new Random().randInt(size);
        Iterator&lt;String&gt; keys = map.iterator();
        while (keys.hasNext()) {
           if (index-- == 0) {
               return keys.next();
           }
           keys.next();
        }
    }
    return null;
}
</code></pre>


<p>This sort of thing isn't necessarily true for dynamic languages like Python which normally have ways to iterate over keys in a map, dictionary or set. They still don't have a way to get a random element from either out of the box without resulting to the <code class="inline">O(n)</code> iteration method, or converting to a list and using a random index approach.</p>

<pre><code>&gt;&gt;&gt; import random
&gt;&gt;&gt; random.choice(set([1, 2, 3]))
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/random.py", line 248, in choice
    return seq[int(self.random() * len(seq))]  # raises IndexError if seq is empty
TypeError: 'set' object is unindexable
</code></pre>

<pre><code>&gt;&gt;&gt; random.choice({'1': 'world', '2': 'galaxy', '3': 'universe'})
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/System/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/random.py", line 248, in choice
    return seq[int(self.random() * len(seq))]  # raises IndexError if seq is empty
KeyError: 2
</code></pre>

<p>And of course that makes sense given how <code class="inline">random.choice</code> is implemented, since there's not necessarily  an order for the elements of a set or dictionary, so you can't expect to subscript them. However they do provide an order when iterating over them and traversing the structure they exist in, so you could certainly use the same <code class="inline">O(n)</code> approach from above.</p>

<p>If there's some other less obvious way to do this in Java using a <a href="http://en.wikipedia.org/w/index.php?title=Dependency_injection&oldid=260831402#A_code_illustration_using_Java">EnterpriseFactoryObserverFactoryFactoryCreator</a>, please leave a comment.</p>


<p><strong>Update: I overlooked something important, which was pointed out by <a href="http://news.ycombinator.com/item?id=1452619">gojomo</a> on Hacker News. Set, which is returned from <code class="inline">keySet()</code> on HashMap, has an iterator. Thus:</strong></p>

<pre><code>public String randomKey() {
    int index = random.nextInt(map.size());
    for (String key: map.keySet()) {
        if (index-- == 0) {
            return key;
        }
    }
    return null;
}
</code></pre>
]]></content></entry>
<entry><title>Pattern Matching with "With"</title><link href="/2010/Apr/28/pattern-matching-with-with.html"/><id>md5:862f9d6d39aec112eecc179210926c60</id><updated>2010-04-28T06:29:00Z</updated><content type="html"><![CDATA[<p>
<span class="preamble">When I originally thought about adding pattern matching to Python, in the <a href="http://sigusr2.net/2008/Sep/30/python-type-constructors-like-ocaml.html">OCaml sense</a>, I ended up using a decorator that more or less registed a bunch of callbacks with a dispatch table based on the types of it's arguments.</span>
</p>

<p>That worked out fine, but it didn't really have the feel of <a href="http://en.wikipedia.org/wiki/Pattern_matching">pattern matching</a> like you get with real <a href="http://en.wikipedia.org/wiki/Algebraic_data_type">algebraic data types</a>. If you recall, I was playing with the following example with the decorator approach:
</p>

<pre><code class="ocaml">type astnode = 
| AndNode of astnode * astnode
| OrNode of astnode * astnode
| NotNode of astnode 
| IdNode of bool

let rec eval_node (n: astnode) = 
  match n with
  | AndNode (l, r) -> (eval_node l) && (eval_node r)
  | OrNode (l, r) -> (eval_node l) || (eval_node r)
  | NotNode l -> not (eval_node l)
  | IdNode v -> v

eval_node (AndNode (IdNode true, IdNode false)) (* returns false *)
</code></pre>

<p>The idea of that program was to create a small language to evaluate boolean expressions. In OCaml, it's quite succinct&mdash;too succinct, in all honesty. That's it. Of course it doesn't include a parser, or a lexer, but that's the crux of it.
</p>

<p>Since that original post, I've posted about two other <q>language hacks</q> that I've attempted to create&mdash;both of which use <a href="http://www.python.org/dev/peps/pep-0343/">context managers</a> and the <code class="inline">with</code>-statement, <a href="http://sigusr2.net/2009/Oct/01/python-worlds.html">worlds</a> and <a href="http://sigusr2.net/2009/Mar/04/dispatching-with-with.html">dispatching urls (a la routes)</a>.</p>

<p>Basically, it occurred to me yesterday, that <code class="inline">with</code>'s <code class="inline">as</code> clause did destructuring of tuples, in the same way that the assignment statement does. That is to say:</p>

<pre><code class="python">a, b, c = 1, 2, 3</code></pre>

<p>Will correctly assign <code class="inline">a = 1</code>, <code class="inline">b = 2</code>, <code class="inline">c = 3</code>, in the same exact way that:</p>

<pre><code class="python">from contextlib import contextmanager
@contextmanager
def assign(*args):
    yield args

with assign(1, 2, 3) as (a, b, c,):
    pass
</code></pre>

<p>will assign <code class="inline">a = 1</code>, <code class="inline">b = 2</code>, <code class="inline">c = 3</code>.</p>

<p>I'll admit, that doesn't look very powerful by itself, but when you consider the possibilities, you might come up with something like I did:</p>

<pre><code class="python">with structural_matching((1, 2, 3)) as match:
    with match('list() x y z') as (x, y, z):
        print x, y, z
    with match('tuple() x _ z') as (x, z):
        print "tuple case"
        print x, z
</code></pre>

<p>which looks incredibly close to pattern matching in OCaml. I was super excited&mdash;but it won't work.</p>

<p>See, <code class="inline">match</code> is a context manager that gets returned with the intention that if the <code class="inline">__enter__()</code> method raises a <code class="inline">NoMatch</code> exception, it skips the "body" and goes to the next match. The problem with that thinking however is simple&mdash;there's no way for <code class="inline">__enter__</code> to force skipping the body due to rejected <a href="http://www.python.org/dev/peps/pep-0377/">PEP-377</a>!</p>

<p>In the example above (full source <a href="http://files.sigusr2.net/match1.py">here</a>), raising <code class="inline">NoMatch</code> in the first <code class="inline">match</code> block, results in control being passed back to the <code class="inline">__exit__()</code> of the outer context manager&mdash;<code class="inline">structural_matching</code>. And to think, I got my hopes up!</p>

<p>But nevertheless, I pressed on, and hacked <a href="http://files.sigusr2.net/match2.py">together</a>, a <code class="inline">match</code>, that can destructure the following examples correctly:</p>

<pre><code class="python">with match('[1:3]', [1, 2, 3, 4]) as (a,):
    print a
# [2, 3]

with match('[1:]', "hello world") as (a,):
    print a
# ('e', 'ello world')

with match('str() x y', 'hello world') as (h, e):
    print 'h = ', h, ',',
    print 'e = ', e
# h = h, e = e

with match('x y z', [1, 2, 3]) as (x, y, z,):
    print z, y, x
# 3 2 1

class obj(object):
    def __init__(self, x, y):
        self.x = x
        self.y = y

with match('obj() .x .y', obj('x-ity', 'y-ity')) as (x, y):
    print 'x = ', x, ',',
    print 'y = ', y
# x = x-ity, y = y-ity

with match('x y _', [1, 2, 3]) as (x, y):
    print x, y
# 1, 2
</code></pre>

<p>It's much less useful considering you can't put it in the <code class="inline">structural_match</code> block ,like you would in a <em>real</em> <code class="inline">match</code> statement, but it's all we've got.</p>

<p>Back then, I concluded with <q>This is as close to OCaml like  pattern matching that we're going to get, at least as far as I know how to get, but it's sort of cool, and definitely a hack.</q> Today, I'll conclude the same way.</p>
]]></content></entry>
<entry><title>The Real Disappointment</title><link href="/2010/Jan/28/the-real-disappointment.html"/><id>md5:14b52b115b36632711ab9050b7832862</id><updated>2010-01-28T00:00:00Z</updated><content type="html"><![CDATA[<p><span class="preamble">It's no <a href="http://mashable.com/2010/01/27/apple-ipad-downsides/">secret</a> <a href="http://i.gizmodo.com/5458382/8-things-that-suck-about-the-ipad">that</a> <a href="http://www.pmptoday.com/2010/01/27/apple-ipad-tablet-disappoints-ibookstore-inspires-wonder/" rel="nofollow">Apple's</a> <a href="http://search.twitter.com/search?q=ipad+failhttp://search.twitter.com/search?q=ipad+fail" rel="nofollow">newly</a> released <a href="http://apple.com/ipad" title="iPad" rel="nofollow">iPad</a> is a big disappointment for many. For me the disappointment isn't in the device itself, but rather the <a href="http://www.defectivebydesign.org/ipad" title="Sign the petition">crippling control</a> that Apple has over it.</span></p>

<p>What I don't like about this, is that there are obvious uses of this thing outside of the basic computing needs Jobs demoed.</p>

<p>Imagine being able to use this thing as a next generation "mouse." Perhaps it would allow multiple windows to be tossed around the screen, or moved around <a href="http://en.wikipedia.org/wiki/Three-card_Monte">"Three-card Monte"</a> style. It'd be revolutionary.</p>

<p>I dare you to name a piece of software intended for creation that couldn't benefit from a multi-touch input pad&mdash;perhaps even customizable based on the context your in within the app? Photoshop sliders? Aperture light tables? Scaling and carving models in Cinema 4d or Maya? The list goes on.</p>

<p>Now, imagine 2 of them working in tandem. On the left, you have a hunking half-keyboard for the Q-W-E-R-T half, and on the right the Y-U-I-O-P half. Suddenly, we have a multitouch split keyboard (without haptic feedback of course), which could be the next generation of <a href="http://makezine.com/pub/tool/FingerWorks_TouchStream_LP">FingerWorks TouchStream</a> style devices, which Apple, for reasons unbeknownst to me, <a href="http://en.wikipedia.org/wiki/FingerWorks">ceased the operations</a> of. (If I had to guess why they killed off FingerWorks, it'd be that Apple thinks the market for ergonomics is oodles smaller than mobile multi-touch devices&mdash;and I reckon they're right.)</p>

<p>The real disappointment with the iPad isn't that it can't run multiple apps, or that it'll be another $29.99 a month for 3G support for iPhone users. It's not even that the pixel density of the thing might make it tough to read books on. The real disappointment is the fact that the device is locked down and we'll never get the chance to use it to innovate the way we interact with our <em>real</em> computers.</p>
]]></content></entry>
<entry><title>Remote Objects</title><link href="/2009/Nov/20/remote-objects.html"/><id>md5:c613f9f24fe2f9428acc9780d5c39573</id><updated>2009-11-20T00:00:00Z</updated><content type="html"><![CDATA[<p><span class="preamble">Back in May, I was tasked with migrating a few years worth of <a href="http://roundup.sourceforge.net/">Roundup</a> data to <a href="http://www.activecollab.com/">activeCollab</a>&mdash;a more featured project management and collaboration tool.</span></p>

<p>The move was justified, as Roundup no longer matched the way our organization wished to conduct business. It was a good move, but as with any migration there are bound to be some hiccups along the way.</p>

<p>Right away I hit one. The data models for these 2 very different pieces of software are insanely different (who knew?). Roundup makes <em>use of</em> a <a href="http://en.wikipedia.org/wiki/SQL">SQL</a> database, but not in a traditional way. And, activeCollab combines almost all of its entities into one table. This of course makes querying with SQL incredibly difficult, and a SQL to SQL translation close to impossible.</p>

<p>Luckily, in moving to activeCollab, we inherited a somewhat <a href="http://en.wikipedia.org/wiki/Representational_State_Transfer">RESTful</a>, API that allows for the modification and creation of entities. As a result, it became apparent that the logical way to migrate this was to pull the data out using the Roundup's libraries and make the appropriate API calls with the translated data.</p>

<p>To make it easy on myself, I developed a quick <a href="http://en.wikipedia.org/wiki/Object_relational_mapper">ORM</a>-like interface to the APIs. I had the idea that if I could make it work for activeCollab, it must be generalizable enough to work for other services and APIs as well, which I could do later.</p>

<p>And, I was right. It could be more generalized, and it could be useful. In fact, the idea was so useful that 3,000 miles away in the San Francisco office someone else was already secretly working on the same idea!</p>

<h3>Enter Remote Objects</h3>

<p>The result of the secretive effort, that I became aware of, is called <a href="http://github.com/sixapart/remoteobjects/">Remote Objects</a>, which identifies itself as <q>An object RESTational model.</q> <a href="http://sixapart.com/">Six Apart</a> has graciously released it as part of the requirements to run <a href="http://www.typepad.com/go/motion">TypePad Motion</a>, which is also available, under a <a href="http://en.wikipedia.org/wiki/BSD_License">BSD License</a>, on <a href="http://github.com/sixapart/typepad-motion">github</a>.</p>

<p>But, just because its main intentions were for being used against the <a href="http://developer.typepad.com/api/rest.html">TypePad APIs</a>, doesn't mean that it <em>only</em> works with them.</p>

<p>In fact, the developers had the foresight to think that this would be useful in other cases too, just as I did, as can be seen in the <a href="http://github.com/sixapart/remoteobjects/tree/master/examples">examples</a> that come with the package.</p>

<p>Needless to say, I abandoned my implementation of this idea and will adopt Remote Objects in the future. Have a look. Hopefully it is useful in your toolbox too.</p>
]]></content></entry>
<entry><title>Python Worlds</title><link href="/2009/Oct/01/python-worlds.html"/><id>md5:8ec25d2f452904fcb32829303656bf92</id><updated>2009-10-01T00:00:00Z</updated><content type="html"><![CDATA[<p><span class="preamble">Last year, I was introduced to a paper via <a href="http://lambda-the-ultimate.org/node/3040">Lambda the Ultimate</a> about <q>worlds,</q> a language construct which allows one to control the scope of side effects while programming.</span></p>

<p>Worlds allow you to capture the current scope of a program in a first-class way. All updates to the current state (i.e. local variables, global variables) happen in a non-commiting way. In other words, you can back out of any changes at any time.</p>

<p>Consider the following example (taken from the <a href="http://www.vpri.org/pdf/rn2008001_worlds.pdf">Warth paper</a>):</p>

<pre><code class="javascript">A = thisWorld; // thisWorld is always the current world
r = new Rectangle(4, 6);

B = A.sprout(); // sprout creates a new world with it's parent set to A
in B { r.h = 3; } // side effects within this `in' occur only in the world B.

C = A.sprout();
in C { r.h = 7 }; // in A's world r.h = 6 still.

C.commit(); // only now does r.h = 7 in world A.
</code></pre>

<p>If you follow along in the comments I've appended to the example, you'll start to see why this idea is interesting, even from this little example.</p>

<p>The astute Scheme programmer, however, will notice almost certainly that this construct could be created with <code class="inline">call/cc</code>, which is certainly true. The problem with this fact is that not all programming languages are Scheme (unfortunately), and of course not all languages support first-class <a href="http://en.wikipedia.org/wiki/Continuation">continuations</a>.</p>

<p>The question I asked myself, however, is this: <q>Can I hack worlds into Python?</q> To which I came up with the short answer after some thinking, <q>sort of.</q>

<p>I guess I should explain what's going on more clearly in the example above. The first thing to note is that <code class="inline">A</code> represents the current scope; the current state of all variables in the program. <q>Sprouting</q> a new world from an existing world means that any changes that occur when using the sprouted world, do not affect the world who sprouted the current world, unless the new world <em>commits</em> the changes made to the original world.</p>

<p>Which is to say, changes that occur in an <code class="inline">in</code> block acting on world <code class="inline">X</code> do not propagate to the parent (the world <code class="inline">X</code> was sprouted from) of <code class="inline">X</code> unless <code class="inline">X.commit()</code> is called.</p>

<h3>Enter Context Managers</h3>

<p>A few months ago, I wrote a blog post about <em><a href="http://sigusr2.net/2009/Mar/04/dispatching-with-with.html">Dispatching With "with"</a></em>, in which I explained <a href="http://www.python.org/dev/peps/pep-0343/">context managers</a> in Python, and how they can be exploited to create a less separated mapping from URLs to request handlers (something that definitely has its place in the small web-app world).</p>

<p>The basic idea of this was that in the <code class="inline">__exit__</code> method of the web-application object, the current frame was inspected and references to functions that represent HTTP methods would be collected, stored and tied to the last regular expression passed to the <code class="inline">expose</code> method in the application object. This simple solution allowed us to express a web application succinctly like so:

<pre><code class="python">app = web.application()
with app.expose('/'):
   def get(): 
       return "Hello World"
app.run()
</code></pre>

<p>For worlds, I also exploit context managers, though mostly for the <code class="inline">in</code>-like syntax, and for managing the current <code class="inline">thisWorld</code> variable.</p>

<p>The quick<a href="#f1">[1]</a> solution that I came up with for <a href="http://github.com/apgwoz/python-worlds">implementing worlds</a> can be used like so:</p>

<pre><code class="python">with Universe(): # establishes new world, assigns to local variable `thisWorld'
   thisWorld.r = True # must assign <em>directly</em> in the world. LIMITATION
   new = thisWorld.sprout() 

   with new:
       new.r = False

   with new.sprout():
       thisWorld.r = 15
       thisWorld.commit() # now new.r is 15, but the original r is still True

   print thisWorld.r # => True
   new.commit()
   print thisWorld.r # => 15
   thisWorld.commit() # have to commit to the actual scope LIMITATION
   # r is now part of the local variables where this universe exists
   print r # => 15 
</code></pre>

<p>Looking at this example, it's already apparent that the Warth implementation of worlds is superior, just in the amount of code needed to take advantage of it. You might also see that I didn't even attempt to port the rectangle example  from above. That is because there isn't anything smart going on under the hood when it comes to container objects (such as lists, tuples, objects, dicts), and I'm not yet sure how to get there.</p>

<p>With simple immutable objects such as booleans, integers and strings, using copy-on-write semantics works wonderfully. Then, on <code class="inline">commit</code> of the world, the code just copies all of the changes into its parent. I haven't tackled the case of mutable container objects just yet, as there are complications in the API<a href="#f2">[2]</a>, as well as the implementation.</p>

<p>The interaction with this is sort of annoying though. In order to take advantage of worlds in Python, you have to touch virtually every line of code in the function you are trying to <q>worldize</q>, because you must assign explicitly to a world. The world's context manager sets up <code class="inline">thisWorld</code> for you, but you still have to do <code class="inline">thisWorld.<em>variable</em></code> to get any sort of benefit.</p>

<p>My inclination is to get into some bytecode hacking to modify all assignments within the <code class="inline">with</code> block to be assignments to <code class="inline">thisWorld</code> automatically, but bytecode hacks are neither pleasant to maintain, nor are they portable across implementations.</p>

<p>It's also possible in the Warth version to <q>worldize</q> functions and any other first class object. Maybe the solution is simple and I just haven't seen it yet. Whatever hacks, that I come up with though, will be just that, hacks, as there is no <em>easy</em> way to add worlds to Python in the same way that Warth added them to JavaScript<a href="#f3">[3]</a>.</p>

<p>We are in an age of programming where mainstream programming languages are unable to adapt to our needs as programmers. We are unable to bend them at our will like we can with <a href="http://en.wikipedia.org/wiki/Scheme_%28programming_language%29">Scheme</a>, <a href="http://common-lisp.net/">Lisp</a> and even <a href="http://clojure.org/">Clojure</a>. Attempts to bring about change on this front have not been met with enthusiasm from most groups. Whether it's a lack of marketing, evangelism or just that the general population doesn't view <q>unbendability</q> as a problem, I'm not sure. But, I for one like the idea of being able to <em>easily</em> add worlds, and other ideas, as <em>true</em> language features to languages that by practicality, I'm forced into using. That would make me a much happier, and effective programmer.</p>

<ol class="footnotes">
    <li id="f1">By quick, I do mean quick. This was 2 hours of work and sketching. Surely there is lots of work to be done to make it a true solution.</li>
    <li id="f2">The same strategy could be used as for simple values like booleans, if the API used a method, say <code class="inline">assign</code> instead of the more natural assignment operator. Consider, <code class="inline">thisWorld.assign('obj.height.inches', 30)</code> vs. <code class="inline">thisWorld.obj.height.inches = 30</code>.</li>
    <li id="f3">The Worlds prototype was written in <a href="http://tinlizzie.org/ometa/">OMeta</a>, which is a solution to the "unbendable" languages problem. Note: I didn't attempt to write worlds in PyMeta, but, it may be possible to do.</li>
</ol>
]]></content></entry>
<entry><title>Bitten... Really Hard</title><link href="/2009/Sep/09/bitten-really-hard.html"/><id>md5:56c6a1146108e40e674d0df15cd6c5b2</id><updated>2009-09-09T00:00:00Z</updated><content type="html"><![CDATA[<p><span class="preamble">Last Friday I was bitten really hard by something I would not have, in my wildest dreams think would bite me, Python's <a href="http://docs.python.org/library/urllib2.html"><code class="inline">urllib2</a></code>.</span></p>

<p>It is the ever so common case that you always hear, <q>It works fine here, it must be your fault.</q> And, boy did I come up with some interesting theories as to why it was not the fault of my code.</p>

<p>Basically, I'm POSTing some data to a resource that is protected by <a href="http://en.wikipedia.org/wiki/Basic_access_authentication">HTTP Basic Authentication</a>, and then reading the response for further processing. It is a basic task, and one that I've done many times in the past.</p>

<p>In fact, I've even used <code class="inline">urllib2</code> to do this before using the following method:</p>
<pre>
<code class="python">headers = {'User-Agent': useragent}
req = urllib2.Request(url, data, headers)
 
passmgr = urllib2.HTTPPasswordMgrWithDefaultRealm()
passmgr.add_password(None, url, username, passwd)
handler = urllib2.HTTPBasicAuthHandler(passmgr)
opener = urllib2.build_opener(handler)
connection = opener.open(req)
</code>
</pre>

<p>In this case, the following behavior is seen:</p>

<ol>
  <li>Client (urllib2) POSTs data leaving out the <code class="inline">Authorization</code> header</li>
  <li>Server responds with a <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.2">401</a>. Client (urllib2) never sees the 401 error, and instead gets a <a href="http://en.wikipedia.org/wiki/SIGPIPE">SIGPIPE</a></li>
  <li>Client attempts to reconnect, going right back to step 1</li>
</ol>

<p>Naturally, the only way I discovered this was to fire up <a href="http://en.wikipedia.org/wiki/Tcpdump">tcpdump</a> and look at what was being sent. It quickly became obvious that there was never an <code class="inline">Authorization</code> header being sent, and therefore the 401 was completely justified. The broken pipe seems to have come from the server responding before reading all of the posted data to thwart off <a href="http://en.wikipedia.org/wiki/Denial-of-service_attack">denial of service</a> attacks.</p>

<p>My only explanation for why this works perfectly fine on my laptop and not in either of the data centers I tried running it from is latency, though I'm shocked, and not yet convinced, by that result.</p>

<p>Incidentally, I solved the problem by sending the <code class="inline">Authorization</code> header on first request, rather than waiting for the confirmation that, yes indeed, the resource needs the Authorization header sent, as <code class="inline">urllib2</code> likes to do.</p>

<code class="python">headers = {'User-Agent': useragent, 
         'Authorization': 'Basic ' + base64.b64encode(username + ':' + passwd)}
req = urllib2.Request(url, data, headers)
connection = urllib2.urlopen(req)
</code>

<p>... and now it works fine.</p>

<p>This whole experience will make me think twice before laying the blame anywhere until I have uncovered the real truth, something I think all programmers should learn to do, if they don't know already.</p>
]]></content></entry>

</feed>